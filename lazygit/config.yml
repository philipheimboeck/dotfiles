services:
  'git.abaservices.ch': 'gitlab:git.abaservices.ch'
os:
  # https://github.com/jesseduffield/lazygit/issues/3052
  openLink: open $(echo {{link}} | sed 's/%2F/\//g')

customCommands:
  # Prune branches no longer on remote
  - key: "G"
    command: |
      git fetch -p && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}'); do git branch -D $branch; done
    context: "localBranches"
    description: "Prune local branches no longer on its remote; (G)one."
    loadingText: "Pruning gone..."
  # Conventional commits
  - key: "C"
    command: "git commit -m \"{{ .Form.Type }}{{if .Form.Scopes}}({{ .Form.Scopes }}){{end}}{{if eq .Form.Breaking `yes`}}!{{end}}: {{ .Form.Description }}{{if .Form.LongDescription }}\n\n{{ .Form.LongDescription }}{{end}}{{if .Form.JIRA }}\n\nRefs: {{ .Form.JIRA }}{{end}}\""
    description: "conventional commit"
    context: "files"
    prompts:
      - type: "menu"
        title: "Select the type of change you are committing."
        key: "Type"
        options:
          - name: "Feature"
            description: "A new feature"
            value: "feat"
          - name: "Fix"
            description: "A bug fix"
            value: "fix"
          - name: "Documentation"
            description: "Documentation only changes"
            value: "docs"
          - name: "Styles"
            description: "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"
            value: "style"
          - name: "Code Refactoring"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "Performance Improvements"
            description: "A code change that improves performance"
            value: "perf"
          - name: "Tests"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
          - name: "Builds"
            description: "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)"
            value: "build"
          - name: "Continuous Integration"
            description: "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)"
            value: "ci"
          - name: "Chores"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "Reverts"
            description: "Reverts a previous commit"
            value: "revert"
      - type: "input"
        title: "Enter the scope(s) of this change."
        key: "Scopes"
        suggestions:
          command: "ls -d packages/* | cut -f2 -d'/'"
      - type: "input"
        title: "Enter the short description of the change."
        key: "Description"
      - type: "input"
        title: "Enter the long description of the change."
        key: "LongDescription"
      - type: "input"
        title: "Enter the JIRA issue key"
        key: "JIRA"
        suggestions:
          command: "git rev-parse --abbrev-ref HEAD | grep -Eo '[A-Z]+\\d*-\\d+'"
      - type: "menu"
        title: "Is this a breaking change?"
        key: "Breaking"
        options:
          - name: "No"
            description: "This change does not introduce a breaking change."
            value: "no"
          - name: "Yes"
            description: "This change introduces a breaking change."
            value: "yes"
      - type: "confirm"
        title: "Is the commit message correct?"
        body: "{{ .Form.Type }}{{if .Form.Scopes}}({{ .Form.Scopes }}){{end}}{{if eq .Form.Breaking `yes`}}!{{end}}: {{ .Form.Description }}{{if .Form.LongDescription }}\n\n{{ .Form.LongDescription }}{{end}}{{if .Form.JIRA }}\n\nRefs: {{ .Form.JIRA }}{{end}}"

